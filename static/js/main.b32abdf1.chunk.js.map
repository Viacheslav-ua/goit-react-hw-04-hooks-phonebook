{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Modal/Modal.module.css","components/ContactForm/ContactForm.module.css","App.module.css","components/Filter/Filter.module.css","components/Modal/Modal.tsx","components/ContactForm/ContactForm.tsx","components/ContactList/ContactList.tsx","components/Filter/Filter.tsx","App.tsx","index.tsx"],"names":["module","exports","modalRoot","document","querySelector","Modal","onClose","children","useEffect","window","addEventListener","handleKeyDown","removeEventListener","e","code","createPortal","className","S","backdrop","onClick","currentTarget","target","content","ContactForm","formSubmit","findName","useState","name","setName","number","setNumber","showModal","setShowModal","handleAddInput","i","RegExp","test","value","reset","toggleModal","state","Alert","severity","AlertTitle","contactsForm","onSubmit","preventDefault","id","uuidv4","TextField","label","variant","onChange","title","required","type","Button","btn","ContactList","list","filterValue","deleteContact","map","toLowerCase","includes","row","text","Filter","handleChangeFilter","input","App","stateLoad","JSON","parse","localStorage","getItem","contacts","setContacts","filter","setFilter","setItem","stringify","container","data","str","find","item","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.b32abdf1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"ContactList_row__BoYjP\",\"text\":\"ContactList_text__3Q4UV\",\"btn\":\"ContactList_btn__RvV5x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__3u6SE\",\"content\":\"Modal_content__3RO0N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsForm\":\"ContactForm_contactsForm__qoC__\",\"input\":\"ContactForm_input__1jNEV\",\"caption\":\"ContactForm_caption__3_-95\",\"btn\":\"ContactForm_btn__2qSq6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__klttd\",\"title\":\"App_title__2Gq9y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"caption\":\"Filter_caption__3nF2w\",\"input\":\"Filter_input__L7Fuy\"};","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\n\r\nimport S from \"./Modal.module.css\";\r\n\r\nconst modalRoot: any = document.querySelector(\"#modal-root\");\r\ninterface PropsType {\r\n  onClose: any;\r\n}\r\nconst Modal: React.FC<PropsType> = ({ onClose, children }) => {\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", handleKeyDown);\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", handleKeyDown);\r\n    };\r\n  }, []);\r\n\r\n  const handleKeyDown = (e: KeyboardEvent) => {\r\n    if (e.code === \"Escape\") {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  const handleBackdropClick = (e: React.MouseEvent) => {\r\n    if (e.currentTarget === e.target) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  return createPortal(\r\n    <div className={S.backdrop} onClick={handleBackdropClick}>\r\n      <div className={S.content}>{children}</div>\r\n    </div>,\r\n    modalRoot\r\n  );\r\n};\r\nexport default Modal;\r\n","import React, { useState } from \"react\";\r\nimport Modal from \"../Modal\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport S from \"./ContactForm.module.css\";\r\nimport Button from \"@mui/material/Button\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Alert from \"@mui/material/Alert\";\r\nimport AlertTitle from \"@mui/material/AlertTitle\";\r\n\r\ninterface PropsType {\r\n  formSubmit: any;\r\n  findName: any;\r\n}\r\n\r\nconst ContactForm: React.FC<PropsType> = ({ formSubmit, findName }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const handleAddInput =\r\n    (i: string) => (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      const b = new RegExp(i);\r\n      if (b.test(e.currentTarget.value)) {\r\n        if (e.currentTarget.name === \"name\") setName(e.currentTarget.value);\r\n        if (e.currentTarget.name === \"number\") setNumber(e.currentTarget.value);\r\n      }\r\n    };\r\n\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    if (findName(name)) {\r\n      toggleModal();\r\n      return;\r\n    }\r\n    formSubmit({ id: uuidv4(), name: name, number: number });\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  const toggleModal = (): void => {\r\n    setShowModal((state) => !state);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {showModal && (\r\n        <Modal onClose={toggleModal}>\r\n          <Alert severity=\"warning\" onClose={toggleModal}>\r\n            <AlertTitle>Warning</AlertTitle>\r\n            {name} is already in contacts\r\n          </Alert>\r\n        </Modal>\r\n      )}\r\n      <form className={S.contactsForm} onSubmit={handleSubmit}>\r\n        <TextField\r\n          label=\"Name\"\r\n          variant=\"standard\"\r\n          id=\"component-simple\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={handleAddInput(\"^$|^[$a-zA-Zа-яА-Я -']*$\")}\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n        <TextField\r\n          label=\"Phone number\"\r\n          variant=\"standard\"\r\n          id=\"component-simple\"\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          onChange={handleAddInput(\"^$|^\\\\+|^\\\\d[\\\\d\\\\s-.]*$\")}\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n\r\n        <Button type=\"submit\" className={S.btn} variant=\"contained\">\r\n          Add contact\r\n        </Button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport S from \"./ContactList.module.css\";\r\ntype listType = {\r\n  id: string;\r\n  name: string;\r\n  number: string;\r\n};\r\n\r\ninterface PropsType {\r\n  list: listType[];\r\n  filterValue: string;\r\n  deleteContact: any;\r\n}\r\n\r\nconst ContactList: React.FC<PropsType> = ({\r\n  list,\r\n  filterValue,\r\n  deleteContact,\r\n}) => {\r\n  return (\r\n    <ul className={S.list}>\r\n      {list.map(\r\n        ({ id, name, number }) =>\r\n          name.toLowerCase().includes(filterValue.toLowerCase()) && (\r\n            <li key={id} className={S.row}>\r\n              <p className={S.text}>\r\n                {name}: {number}\r\n              </p>\r\n              <button className={S.btn} onClick={() => deleteContact(id)}>\r\n                Удалить\r\n              </button>\r\n            </li>\r\n          )\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\nexport default ContactList;\r\n","import React from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport S from \"./Filter.module.css\";\r\n\r\ninterface PropsType {\r\n  filterValue: string;\r\n  handleChangeFilter: any;\r\n}\r\n\r\nconst Filter: React.FC<PropsType> = ({ filterValue, handleChangeFilter }) => {\r\n  return (\r\n    <div>\r\n      {/* <label className={S.caption}>Find contacts by name</label> */}\r\n      <TextField\r\n        label=\"Find contacts by name\"\r\n        variant=\"standard\"\r\n        id=\"component-simple\"\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        className={S.input}\r\n        value={filterValue}\r\n        onChange={handleChangeFilter}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default Filter;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ContactForm from \"./components/ContactForm\";\r\nimport ContactList from \"./components/ContactList\";\r\nimport Filter from \"./components/Filter\";\r\nimport S from \"./App.module.css\";\r\n\r\ntype contactsType = {\r\n  id: string;\r\n  name: string;\r\n  number: string;\r\n};\r\n\r\nconst App = () => {\r\n  const stateLoad: contactsType[] = JSON.parse(\r\n    window.localStorage.getItem(\"contacts\") ??\r\n      '[{\"id\":\"id-1\",\"name\":\"Rosie Simpson\",\"number\":\"459-12-56\"},{\"id\":\"id-2\",\"name\":\"Hermione Kline\",\"number\":\"443-89-12\"},{\"id\":\"id-3\",\"name\":\"Eden Clements\",\"number\":\"645-17-79\"},{\"id\":\"id-4\",\"name\":\"Annie Copeland\",\"number\":\"227-91-26\"}]'\r\n  );\r\n\r\n  const [contacts, setContacts] = useState(stateLoad);\r\n  const [filter, setFilter] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(\"contacts\", JSON.stringify(contacts));\r\n  }, [contacts]);\r\n\r\n  const findName = (str: string): boolean => {\r\n    return contacts.find((item) =>\r\n      item.name.toLowerCase().includes(str.toLowerCase())\r\n    )\r\n      ? true\r\n      : false;\r\n  };\r\n\r\n  const formSubmitHandler = (data: contactsType) => {\r\n    setContacts((state) => [...state, data]);\r\n  };\r\n\r\n  const changeFilter = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setFilter(e.currentTarget.value);\r\n  };\r\n\r\n  const deleteContact = (id: string): void => {\r\n    setContacts((state) => state.filter((item) => item.id !== id));\r\n  };\r\n\r\n  return (\r\n    <div className={S.container}>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm formSubmit={formSubmitHandler} findName={findName} />\r\n      <h2 className={S.title}>Contacts</h2>\r\n      <Filter filterValue={filter} handleChangeFilter={changeFilter} />\r\n      <ContactList\r\n        list={contacts}\r\n        filterValue={filter}\r\n        deleteContact={deleteContact}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}